name: Stress Test HTTPD

on:
  push:
    branches: [
      master
    ]
  pull_request:
    branches: [
      master
    ]
  workflow_dispatch:  # Allows running this workflow manually from Actions tab


jobs:
  test-httpd:


    strategy:
      matrix:
        include:  # put in order of visibility importance (shown in UI)
        #- os: macos-latest
        - os: windows-latest
        - os: ubuntu-latest


    # https://github.com/actions/virtual-environments#available-environments
    #
    runs-on: ${{ matrix.os }}


    steps:


  #====# CHECKOUT STEPS #=====================================================#


    # GitHub CI checkout on Windows auto translates LF to CR/LF in files:
    #
    # https://github.com/actions/checkout/issues/135
    #
    # However, Ren-C is taking the long view on this and prohibiting CR/LF in
    # source by default.
    #
    # https://forum.rebol.info/t/newlina-non-grata/1207
    # https://forum.rebol.info/t/1264
    #
    - name: Disable LF to CRLF Auto Translation In Git
      if: matrix.os == 'windows-latest'
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf


    # https://github.com/actions/checkout
    #
    # See README: Checkout Action
    #
    - uses: actions/checkout@v2  # See README: Trusted Actions



  #====# INSTALL R3 INTERPRETER #=============================================#


    - name: Download and Cache the Interpreter
      uses: metaeducation/ren-c-action@release


  #====# TEST STEPS #==========================================================#

    # The tests are designed to call QUIT and return 1 status on failure, with
    # 0 returned on success.


    # "Simple" httpd example of serving a single UTF-8 string with a high
    # codepoint.  The later tests are a superset of this one.  But if this
    # doesn't work, it's probably the easiest one to debug.
    #
    - name: Simple HTTPD (Single UTF-8 String With High Codepoint)
      run: |
        r3 tests/simple.reb


    # Stress test that sets up a client and server to transmit ever-increasing
    # amounts of data, and check that the transmission worked.
    #
    - name: Stress Test Of Transmitting Ever-Increasing Data
      run: |
        r3 tests/stress.reb


    # Variation of the stress test where the client picks a random moment in
    # the transmission to disconnect.  It does the disconnection for about half
    # of its reads, and tries to make sure the server remains robust and sends
    # data correctly for the other half.  Uses the git commit of the interpreter
    # as a random seed for reproducibility, while still varying the hangup
    # moments.
    #
    - name: Stress Test With Random Client Hangups
      run: |
        r3 tests/stress.reb -- hangup
